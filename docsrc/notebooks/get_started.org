# -*- mode: org -*-
# -*- coding: utf-8 -*-
# -*- org-src-preserve-indentation: t; org-edit-src-content: 0; -*-
# ==============================================================================
# author          :Ghislain Vieilledent
# email           :ghislain.vieilledent@cirad.fr, ghislainv@gmail.com
# web             :https://ecology.ghislainv.fr
# license         :GPLv3
# ==============================================================================

#+title: Get Started
#+author:
# #+author: Ghislain Vieilledent
# #+email: ghislain.vieilledent@cirad.fr

#+LANGUAGE: en
#+TAGS: Blog(B) noexport(n) Stats(S)
#+TAGS: Ecology(E) R(R) OrgMode(O) Python(P)
#+EXPORT_SELECT_TAGS: Blog
#+OPTIONS: H:3 num:t toc:nil \n:nil @:t ::t |:t ^:{} -:t f:t *:t <:t
#+OPTIONS: html-postamble:nil
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+HTML_DOCTYPE: html5
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="style.css"/>

# For math display
#+LATEX_HEADER: \usepackage{amsfonts}
#+LATEX_HEADER: \usepackage{unicode-math}

#+PROPERTY: header-args :eval never-export

* Version information    :noexport:

#+begin_src emacs-lisp -n :exports both
(princ (concat
        (format "Emacs version: %s\n"
                (emacs-version))
        (format "org version: %s\n"
                (org-version))))        
#+end_src

#+RESULTS:
: Emacs version: GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.30, cairo version 1.16.0)
:  of 2021-11-27, modified by Debian
: org version: 9.5.3

* Preamble

** Importing Python modules

We import the Python modules needed for running the analysis.

#+begin_src python :results output :session :exports both
# Imports
import os
import pkg_resources

import numpy as np
import pandas as pd
from tabulate import tabulate

import riskmapjnr as rmj
#+end_src

#+RESULTS:

We increase the cache for GDAL to increase computational speed.

#+begin_src python :results output :session :exports both
# GDAL
os.environ["GDAL_CACHEMAX"] = "1024"
#+end_src

#+RESULTS:

Set =PROJ_LIB= environmental variable.

#+begin_src python :results output :session :exports both
os.environ["PROJ_LIB"] = "/home/ghislain/.pyenv/versions/miniconda3-latest/envs/conda-rmj/share/proj"
#+end_src

#+RESULTS:

** Forest cover change data

We use the Guadeloupe archipelago as a case study. Recent forest cover change data for Guadeloupe is included in the =riskmapjnr= package. The raster file (=fcc123_GLP.tif=) includes the following values: *1* for deforestation on the period 2000--2010, *2* for deforestation on the period 2010--2020, and *3* for the remaining forest in 2020. NoData value is set to *0*. The first period (2000--2010) will be used for calibration and the second period (2010--2020) will be used for validation. This is the only data we need to derive a map of deforestation risk following the JNR methodology.

#+begin_src python :results output :session :exports both
fcc_file = pkg_resources.resource_filename("riskmapjnr", "data/fcc123_GLP.tif")
print(fcc_file)
#+end_src

#+RESULTS:
: /home/ghislain/Code/riskmapjnr/riskmapjnr/data/fcc123_GLP.tif

* Derive the deforestation risk map

#+begin_src python :results output :session :exports both
results_makemap = rmj.makemap(
    fcc_file="data/fcc123_GLP.tif",
    time_interval=[10, 10],
    output_dir="outputs_makemap",
    clean=False,
    dist_bins=np.arange(0, 1080, step=30),
    win_sizes=np.arange(5, 48, 16),
    ncat=30,
    methods=["Equal Interval", "Equal Area"],
    csize=40,
    figsize=(6.4, 4.8),
    dpi=100,
    blk_rows=128,
    verbose=True)
#+end_src

#+RESULTS:

* Results

** Deforestation risk and distance to forest edge

Distance threshold.

#+begin_src python :results output :session :exports both
dist_thresh = results_makemap["dist_thresh"]
print(f"The distance theshold is {dist_thresh} m")
#+end_src

#+RESULTS:
: The distance theshold is 180 m

We can have access to a table indicating the cumulative percentage of deforestation as a function of the distance.

#+begin_src python :results value raw :session :exports results
perc_df = pd.read_csv("outputs_makemap/perc_dist.csv", na_filter=False)
col_names = ["Distance", "Npixels", "Area", "Cumulation", "Percentage"]
tabulate(perc_df.head(10), headers=col_names, tablefmt="orgtbl", showindex=False)
#+end_src

#+RESULTS:
| Distance | Npixels |    Area | Cumulation | Percentage |
|----------+---------+---------+------------+------------|
|       30 |   53389 | 4805.01 |    4805.01 |     75.253 |
|       60 |   10235 |  921.15 |    5726.16 |    89.6795 |
|       90 |    3848 |  346.32 |    6072.48 |    95.1033 |
|      120 |    1474 |  132.66 |    6205.14 |     97.181 |
|      150 |     914 |   82.26 |     6287.4 |    98.4693 |
|      180 |     428 |   38.52 |    6325.92 |    99.0725 |
|      210 |     230 |    20.7 |    6346.62 |    99.3967 |
|      240 |     178 |   16.02 |    6362.64 |    99.6476 |
|      270 |      90 |     8.1 |    6370.74 |    99.7745 |
|      300 |      39 |    3.51 |    6374.25 |    99.8294 |

** Validation

#+begin_src python :results file :session :exports both
ofile = "outputs_makemap/pred_obs_ws5_ei.png"
ofile
#+end_src

#+NAME: fig:pred_obs
#+ATTR_RST: :width 600
#+CAPTION: *Relationship between observed and predicted deforestation in 1 x 1Â km grid cells*. The red line is the identity line. Values of the weighted root mean squared error (wRMSE, in ha) and of the number of observations ($n$, the number of spatial cells) are reported on the graph.
#+RESULTS:
[[file:outputs_makemap/pred_obs_ws5_ei.png]]

** Riskmap

To be done.

* Environment setup and test :noexport:

#+BEGIN_SRC python :results value
import sys
return(sys.executable)
#+END_SRC

#+RESULTS:
: /home/ghislain/.pyenv/versions/miniconda3-latest/envs/conda-rmj/bin/python

Local Variables:
org-babel-python-command: "/home/ghislain/.pyenv/versions/miniconda3-latest/envs/conda-rmj/bin/python"
org-babel-sh-command: "/bin/bash"
End:

